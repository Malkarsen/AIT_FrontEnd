/* display - это св-во, которое решает как элемент будет отображаться на странице и с какими св-ами */
/* //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/*  display: flex - позволяет управлять элементами используя flexbox, это св-во дается родителю всех элементов, которыми вы хотите управлять */
/* Flex св-ва только для родителя:
1. flex-direction -меняет направление(Вертикально/ горизонтально) вдоль которых будут распологаться элементы
- row - используется по умолчанию, распологает элементы в род. контейнере по горизонтали
- column - распологает элементы в род контейнере по вертикали
- row-reverse - распологает элементы в строку, но переносит в конец главное(main) оси и меняет элементы местами(полностью наоборот)
 - column-reverse - распологает элементы в столбец, но переносит в конец главное(main) оси и меняет элементы местами(полностью наоборот)
*/
/* 2. gap - отстпуы между элементами внутри родительского flex контейнера */
/* 3. flex-wrap - св-во, которое отвечает за то как наши элементы переносятся на другую строку, при сужении экрана
- nowrap - по умолчанию, элементы не переносятся на другую строку
- wrap - элемены переносятся на другую строку, начиная с последнего и он переносится вниз */
/* - wrap-reverse - элемены переносятся на другую строку, начиная с последнего вверх,  итоге первый элемент оказывается в самом низу */
/* 4. flex:1 - говорит элементу занять все возможное пространство в контейнере, в котором он находится */
/* 5. justify-content - позволяет распологать элементы в вдоль main axis 
6. align-items - позволяет распологать элементы в вдоль cross axis  */

* {
    box-sizing: border-box;
}

html, body {
    height: 100%;
    margin: 0;
}

#root {
    display: flex;
    flex-direction: column;
    min-height: 100%;
    background-color: antiquewhite;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
li {
    margin: 0;
    padding: 0;
}

.box-container {
    /* 1 шаг flex-разработки - даем display: flex для родительского контейнера, 
    дочерними элементами которого мы хотим управлять*/
    display: flex;
    flex: 1; /*займи все незанятое пространство от своего flex-родителя */

    flex-direction: row; /* направление элементов по горизонтали, вертикали и отраженно */
    /* flex-direction: column;
    flex-direction: row-reverse;
    flex-direction: column-reverse; */

    flex-wrap: wrap; /* перенос элементов в случае уменьшения экрана */
    /* flex-wrap: wrap-reverse; */

    gap: 30px; /* отступ между элементами (между ними)*/

    /* justify-content: flex-start; управляет положением контента по оси main */
    justify-content: center; 
    /* justify-content: flex-end; */
    /* justify-content: space-between; равномерно размазать элементы по строке */
    /* justify-content: space-around; равномерно размазать элементы по строке с добавлением отступов у крайних элементов */
    /* justify-content: space-evenly; расстояния все равны */

    align-items: flex-start; /* выравнивание элементов по оси cross */
    align-items: center;
}

.box {
    width: 150px;
    height: 150px;
    border: 2px solid black;
    padding: 20px;
    font-size: 24px;
    font-weight: bold;
}

#box1 {
    background-color: aquamarine;
}

#box2 {
    background-color: blue;
}

#box3 {
    background-color: blueviolet;
}

#box4 {
    background-color: red;
}

#box5 {
    background-color: black;
    color: white;
}